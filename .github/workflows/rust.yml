name: ci

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      # matrix:
      #   target:
      #     - x86_64-unknown-linux-gnu
      #     - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/toolchain@v1
        with:
          name: snowytrees
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build tests
        run: nix build .#io-uring-test-ci
      - name: Run tests
        run:
          ./result/bin/io-uring-test

  check-bench:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        target:
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/toolchain@v1
        with:
          name: snowytrees
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --package io-uring-bench

  check:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    #   matrix:
    #     target:
    #       - x86_64-unknown-linux-gnu
    #       - x86_64-unknown-linux-musl
    #       - i686-unknown-linux-gnu
    #       - aarch64-unknown-linux-gnu
    #       - mips64-unknown-linux-gnuabi64

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/toolchain@v1
        with:
          name: snowytrees
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Enter dev shell
        run: nix develop .#
      - uses: actions-rs/clippy-check@v1
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/toolchain@v1
        with:
          name: snowytrees
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Enter dev shell
        run: nix develop .#

      - name: "rustfmt --check"
        run: |
          if ! rustfmt --edition 2021 --check $(find . -name '*.rs' -print); then
            printf "Please run \`rustfmt --edition 2021 \$(find . -name '*.rs' -print)\` to fix rustfmt errors.\n" >&2
            exit 1
          fi
